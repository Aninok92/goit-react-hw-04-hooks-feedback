{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Notification/Notification.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Container/Container.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","wrapper","map","option","feedbackButton","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","itemSpan","Section","title","children","section","Container","Notification","message","notification","App","useState","setDood","setNeutral","setBad","optionsArr","totalFeedback","isFeedBack","Object","keys","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06618b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2SKBQ\",\"itemSpan\":\"Statistics_itemSpan__1V8zK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3CSMM\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__3tBLy\",\"wrapper\":\"FeedbackOptions_wrapper__112YH\",\"good\":\"FeedbackOptions_good__3hBHG\",\"neutral\":\"FeedbackOptions_neutral__2Ifvi\",\"bad\":\"FeedbackOptions_bad__2g0hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3wmU5\",\"title\":\"Section_title__vcYAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2nf-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2-Oxr\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.wrapper}>\r\n    {options.map((option) => (\r\n      <button\r\n        className={`${s.feedbackButton} ${s[option]}`}\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      good: PropTypes.string,\r\n      neutral: PropTypes.string,\r\n      bad: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={s.list}>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Good:</span> {good}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Neutral:</span> {neutral}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Bad:</span> {bad}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Total:</span> {total}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Positive feedback:</span>\r\n      {positivePercentage}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import s from \"./Notification.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={s.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Section from \"../Section/Section\";\r\nimport Container from \"../Container/Container\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nfunction App() {\r\n  const [good, setDood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const optionsArr = { good, neutral, bad };\r\n  const totalFeedback = good + neutral + bad;\r\n  const isFeedBack = good > 0 || neutral > 0 || bad > 0;\r\n\r\n  const leaveFeedback = (options) => {\r\n    switch (options) {\r\n      case \"good\":\r\n        setDood(good + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral(neutral + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad(bad + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Section title={\"Please leave feedback\"}>\r\n        <FeedbackOptions\r\n          options={Object.keys(optionsArr)}\r\n          onLeaveFeedback={leaveFeedback}\r\n        />\r\n      </Section>\r\n      <Section title={\"Statistics\"}>\r\n        {isFeedBack ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={totalFeedback}\r\n            positivePercentage={((good / totalFeedback) * 100).toFixed()}\r\n          />\r\n        ) : (\r\n          <Notification message={\"No feedback given\"} />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}